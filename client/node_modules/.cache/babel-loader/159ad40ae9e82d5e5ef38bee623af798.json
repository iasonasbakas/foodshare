{"ast":null,"code":"import _assertThisInitialized from \"/home/gkodosis/foodshare-assignment/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"/home/gkodosis/foodshare-assignment/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/gkodosis/foodshare-assignment/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/gkodosis/foodshare-assignment/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/gkodosis/foodshare-assignment/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/gkodosis/foodshare-assignment/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/gkodosis/foodshare-assignment/client/src/Posts.js\";\nimport React, { Component } from 'react';\nimport { Container, Button, Badge, ListGroup, ListGroupItem, Form, Input, Alert, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(faEye);\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search() {\n    _classCallCheck(this, Search);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Search).apply(this, arguments));\n  }\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          searchTerm = _this$props.searchTerm,\n          onSearchChange = _this$props.onSearchChange;\n      return React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      });\n      return React.createElement(\"form\", {\n        className: \"Search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"search post by location\",\n        value: searchTerm,\n        onChange: onSearchChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nvar ItemList =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(ItemList, _Component2);\n\n  function ItemList() {\n    _classCallCheck(this, ItemList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ItemList).apply(this, arguments));\n  }\n\n  _createClass(ItemList, [{\n    key: \"searchItem\",\n    value: function searchItem(item) {\n      return item.location.toLowerCase().includes(this.props.searchTerm.toLowerCase());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"posts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.props.list.filter(function (item) {\n        return _this.searchItem(item);\n      }).map(function (item) {\n        return React.createElement(ListGroupItem, {\n          key: item.id,\n          className: \"justify-content-between\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"post-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(Badge, {\n          pill: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, item.location), React.createElement(Link, {\n          to: '/posts/' + item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, item.description)));\n      }))));\n    }\n  }]);\n\n  return ItemList;\n}(Component);\n\nvar PostPreview =\n/*#__PURE__*/\nfunction (_Component3) {\n  _inherits(PostPreview, _Component3);\n\n  function PostPreview() {\n    _classCallCheck(this, PostPreview);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PostPreview).apply(this, arguments));\n  }\n\n  _createClass(PostPreview, [{\n    key: \"render\",\n    value: function render() {\n      if (!this.props.post) {\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        isOpen: this.props.modal,\n        toggle: this.props.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.props.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Post Preview\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Product\"), React.createElement(\"a\", {\n        href: this.props.post.profile_photo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, this.props.book.product), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Expiration\"), this.props.post.expiration_date), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.props.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"OK\"), ' ')));\n    }\n  }]);\n\n  return PostPreview;\n}(Component);\n\nvar Message =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Message, _React$Component);\n\n  function Message(props) {\n    var _this2;\n\n    _classCallCheck(this, Message);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Message).call(this, props));\n    _this2.state = {\n      visible: true\n    };\n    _this2.onDismiss = _this2.onDismiss.bind(_assertThisInitialized(_assertThisInitialized(_this2)));\n    return _this2;\n  }\n\n  _createClass(Message, [{\n    key: \"onDismiss\",\n    value: function onDismiss() {\n      this.setState({\n        visible: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Alert, {\n        className: \"message\",\n        color: this.props.color,\n        isOpen: this.state.visible,\n        toggle: this.onDismiss,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, this.props.message);\n    }\n  }]);\n\n  return Message;\n}(React.Component);\n\nvar Posts =\n/*#__PURE__*/\nfunction (_Component4) {\n  _inherits(Posts, _Component4);\n\n  function Posts(props) {\n    var _this3;\n\n    _classCallCheck(this, Posts);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(Posts).call(this, props));\n    _this3.state = {\n      list: null,\n      searchTerm: '',\n      togglePreviewModal: false,\n      bookToPreview: null\n    };\n    _this3.onSearchChange = _this3.onSearchChange.bind(_assertThisInitialized(_assertThisInitialized(_this3)));\n    _this3.onDismiss = _this3.onDismiss.bind(_assertThisInitialized(_assertThisInitialized(_this3)));\n    _this3.onPreview = _this3.onPreview.bind(_assertThisInitialized(_assertThisInitialized(_this3)));\n    _this3.togglePreview = _this3.togglePreview.bind(_assertThisInitialized(_assertThisInitialized(_this3)));\n    return _this3;\n  }\n\n  _createClass(Posts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      axios.get('/api/posts').then(function (response) {\n        return _this4.setState({\n          list: response.data\n        });\n      }).catch(function (error) {\n        return error;\n      });\n    }\n  }, {\n    key: \"togglePreview\",\n    value: function togglePreview() {\n      this.setState({\n        togglePreviewModal: !this.state.togglePreviewModal\n      });\n    }\n  }, {\n    key: \"onDismiss\",\n    value: function onDismiss(id) {\n      var _this5 = this;\n\n      axios(\"/api/posts/\".concat(id), {\n        method: \"DELETE\"\n      }).then(function (response) {\n        var updatedList = _this5.state.list.filter(function (item) {\n          return item.id !== id;\n        });\n\n        _this5.setState({\n          list: updatedList\n        });\n      }).catch(function (error) {\n        return error;\n      });\n    }\n  }, {\n    key: \"onPreview\",\n    value: function onPreview(id) {\n      var _this6 = this;\n\n      axios.get(\"/api/posts/\".concat(id)).then(function (response) {\n        _this6.setState({\n          postToPreview: response.data\n        });\n\n        _this6.togglePreview();\n      }).catch(function (error) {\n        return error;\n      });\n    }\n  }, {\n    key: \"onSearchChange\",\n    value: function onSearchChange(event) {\n      // shallow merge, so list is preserved\n      this.setState({\n        searchTerm: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.list) {\n        return null;\n      }\n\n      var referrerState = this.props.location.state;\n      var message = '';\n\n      if (referrerState) {\n        message = referrerState.message;\n        referrerState.message = '';\n      }\n\n      var postToPreview = this.state.postToPreview;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(PostPreview, {\n        post: postToPreview,\n        modal: this.state.togglePreviewModal,\n        toggle: this.togglePreview,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }), React.createElement(Search, {\n        value: this.searchTerm,\n        onSearchChange: this.onSearchChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }), React.createElement(ItemList, {\n        list: this.state.list,\n        searchTerm: this.state.searchTerm,\n        onDismiss: this.onDismiss,\n        onPreview: this.onPreview,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/newpost\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, \"New\"))), message && React.createElement(Message, {\n        color: \"success\",\n        message: message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Posts;\n}(Component);\n\n;\nexport default Posts;","map":{"version":3,"sources":["/home/gkodosis/foodshare-assignment/client/src/Posts.js"],"names":["React","Component","Container","Button","Badge","ListGroup","ListGroupItem","Form","Input","Alert","Modal","ModalHeader","ModalBody","ModalFooter","Redirect","Link","axios","library","FontAwesomeIcon","faEye","add","Search","props","searchTerm","onSearchChange","ItemList","item","location","toLowerCase","includes","list","filter","searchItem","map","id","description","PostPreview","post","modal","toggle","profile_photo","book","product","expiration_date","Message","state","visible","onDismiss","bind","setState","color","message","Posts","togglePreviewModal","bookToPreview","onPreview","togglePreview","get","then","response","data","catch","error","method","updatedList","postToPreview","event","target","value","referrerState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n  Container,\n  Button,\n  Badge,\n  ListGroup,\n  ListGroupItem,\n  Form,\n  Input,\n  Alert,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\n\nimport {\n  Redirect,\n  Link\n} from \"react-router-dom\";\n\nimport axios from 'axios';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faEye);\n\nclass Search extends Component {\n\n  render() {\n    const { searchTerm, onSearchChange } = this.props;\n\n    return (<Header />)\n\n    return (\n      <form className=\"Search\">\n        <input\n          type=\"text\"\n          placeholder=\"search post by location\"\n          value={searchTerm}\n          onChange={onSearchChange}\n        />\n      </form>\n    );\n  }\n}\n\nclass ItemList extends Component {\n\n  searchItem(item) {\n    return item.location.toLowerCase()\n      .includes(this.props.searchTerm.toLowerCase());\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"posts\">\n          <ListGroup>\n            {this.props.list.filter(item => this.searchItem(item)).map(\n              item =>\n                <ListGroupItem\n                  key={item.id}\n                  className=\"justify-content-between\">\n                  <div className=\"post-item\">\n                    <Badge pill>{item.location}</Badge>\n                    <Link \n                      to={'/posts/' + item.id}>{item.description}\n                    </Link>\n                  </div>\n                </ListGroupItem>\n            )}\n          </ListGroup>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass PostPreview extends Component {\n\n  render() {\n\n    if (!this.props.post) { return null; }\n\n    return (\n      <div>\n        <Modal isOpen={this.props.modal} toggle={this.props.toggle}>\n          <ModalHeader\n            toggle={this.props.toggle}>\n            Post Preview\n          </ModalHeader>\n          <ModalBody>\n            <h5>Product</h5>\n              <a href={this.props.post.profile_photo}>\n                {this.props.book.product}</a>\n            <h5>Expiration</h5>{this.props.post.expiration_date}\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.props.toggle}>OK</Button>{' '}\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nclass Message extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visible: true\n    };\n\n    this.onDismiss = this.onDismiss.bind(this);\n  }\n\n  onDismiss() {\n    this.setState({ visible: false });\n  }\n\n  render() {\n    return (\n      <Alert\n        className=\"message\"\n        color={this.props.color}\n        isOpen={this.state.visible}\n        toggle={this.onDismiss}>\n        {this.props.message}\n      </Alert>\n    );\n  }\n}\n\n\nclass Posts extends Component {\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      list: null,\n      searchTerm: '',\n      togglePreviewModal: false,\n      bookToPreview: null,\n    };\n    \n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n    this.onPreview = this.onPreview.bind(this);\n    this.togglePreview = this.togglePreview.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('/api/posts')\n      .then(response =>  this.setState({list: response.data}))\n      .catch(error => error);\n  }\n\n  togglePreview() {\n    this.setState({\n      togglePreviewModal: !this.state.togglePreviewModal\n    });\n  }\n  \n  onDismiss(id) {\n    axios(`/api/posts/${id}`, {method: \"DELETE\"})\n      .then(response => {\n        const updatedList = this.state.list.filter(item => item.id !== id);\n        this.setState({ list: updatedList });\n      })\n      .catch(error => error);\n  }\n\n  onPreview(id) {\n    axios.get(`/api/posts/${id}`)\n      .then(response => {\n        this.setState({postToPreview: response.data});\n        this.togglePreview();\n      })\n      .catch(error => error);    \n  }\n  \n  onSearchChange(event) {\n    // shallow merge, so list is preserved\n    this.setState({ searchTerm: event.target.value });\n  }\n\n  render() {\n    \n    if (!this.state.list) { return null; }\n\n    const referrerState = this.props.location.state;\n    let message = '';\n    if (referrerState) {\n      message = referrerState.message;\n      referrerState.message = '';\n    }\n    const postToPreview = this.state.postToPreview;\n\n    return(\n      <div>\n        <PostPreview\n          post={postToPreview}\n          modal={this.state.togglePreviewModal}\n          toggle={this.togglePreview}/>\n        <Search\n          value={this.searchTerm}\n          onSearchChange={this.onSearchChange}\n        />                          \n        <ItemList\n          list={this.state.list}\n          searchTerm={this.state.searchTerm}\n          onDismiss={this.onDismiss}\n          onPreview={this.onPreview}\n        />\n        <div>\n          <Link to='/newpost'>\n            <Button color=\"primary\">New</Button>\n          </Link>\n        </div>\n        { message &&\n          <Message\n            color=\"success\"\n            message={message}\n          />\n        }\n      </div>\n    );\n  }\n};\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}