{"ast":null,"code":"import _objectSpread from \"/home/iason/foodshare-assignment/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/iason/foodshare-assignment/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/iason/foodshare-assignment/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/iason/foodshare-assignment/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/iason/foodshare-assignment/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/iason/foodshare-assignment/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/iason/foodshare-assignment/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/iason/foodshare-assignment/client/src/NewPost.js\";\nimport React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Alert } from 'reactstrap';\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport './App.css';\nvar emptyPost = {\n  user: '',\n  product: '',\n  location: '',\n  description: '',\n  expiration_date: '',\n  upload_date: '',\n  time: ''\n};\n\nvar NewPost =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewPost, _Component);\n\n  function NewPost(props) {\n    var _this;\n\n    _classCallCheck(this, NewPost);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewPost).call(this, props));\n    _this.state = {\n      toMain: false,\n      message: '',\n      post: _objectSpread({}, emptyPost)\n    };\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(NewPost, [{\n    key: \"handleError\",\n    value: function handleError(error) {\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n        this.setState({\n          toMain: false,\n          message: error.response.data\n        });\n      } else if (error.request) {\n        // The request was made but no response was received\n        // `error.request` is an instance of XMLHttpRequest\n        console.log(error.request);\n        this.setState({\n          toMain: false,\n          message: 'No response'\n        });\n      } else {\n        // Something happened in setting up the request that\n        // triggered an Error\n        console.log('Error', error.message);\n        this.setState({\n          toMain: false,\n          message: error.message\n        });\n      }\n    }\n  }, {\n    key: \"createPost\",\n    value: function createPost(data) {\n      var endpoint = '/api/posts/';\n      var thisComp = this;\n      var lookupOptions = {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      };\n      fetch(endpoint, lookupOptions).then(function (response) {\n        return response.json();\n      }).then(function (responseData) {\n        console.log(responseData);\n\n        if (thisComp.props.newPostItemCreated) {\n          thisComp.props.newPostItemCreated(responseData);\n        }\n\n        thisComp.clearForm();\n      }).catch(function (error) {\n        console.log(\"error\", error);\n        alert(\"An error occured, please try again later.\");\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        post: _objectSpread({}, emptyPost)\n      });\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var target = event.target;\n      var name = target.name;\n      var value = target.value;\n\n      var newPost = _objectSpread({}, this.state.post);\n\n      newPost[name] = value;\n      this.setState({\n        post: newPost\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n      var data = this.state;\n      var post = this.props.post;\n      this.createPost(data);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.toMain) {\n        var message = this.state.message;\n        return React.createElement(Redirect, {\n          to: {\n            pathname: \"/\",\n            state: {\n              message: message\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        });\n      }\n\n      var post = this.state.post;\n      return React.createElement(\"div\", {\n        className: \"post\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"location\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Location\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"location\",\n        value: post.location,\n        required: \"required\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Description\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"description\",\n        value: post.description,\n        required: \"required\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"User\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"user\",\n        value: post.user,\n        required: \"required\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"product\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Product\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"product\",\n        value: post.product,\n        required: \"required\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"expiration_date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Expiration Date\"), React.createElement(Input, {\n        type: \"Date\",\n        name: \"expiration_date\",\n        value: post.expiration_date,\n        required: \"required\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      })), React.createElement(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Submit\"), ' ', React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Back\"), ' ')), this.state.message && React.createElement(Alert, {\n        className: \"message\",\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Error\", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \" \"), this.state.message));\n    }\n  }]);\n\n  return NewPost;\n}(Component);\n\nexport default NewPost;","map":{"version":3,"sources":["/home/iason/foodshare-assignment/client/src/NewPost.js"],"names":["React","Component","Button","Form","FormGroup","Label","Input","Alert","Redirect","Link","axios","emptyPost","user","product","location","description","expiration_date","upload_date","time","NewPost","props","state","toMain","message","post","handleInputChange","bind","handleSubmit","error","response","console","log","data","status","headers","setState","request","endpoint","thisComp","lookupOptions","method","body","JSON","stringify","fetch","then","json","responseData","newPostItemCreated","clearForm","catch","alert","event","target","name","value","newPost","preventDefault","createPost","pathname"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Alert\n} from 'reactstrap';\n\nimport {\n  Redirect,\n  Link\n} from \"react-router-dom\";\n\nimport axios from 'axios';\n\nimport './App.css';\n\n\nconst emptyPost = {\n  user: '',\n  product: '',\n  location: '',\n  description: '',\n  expiration_date: '',\n  upload_date: '',\n  time: ''\n};\n\nclass NewPost extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      toMain: false,\n      message: '',\n      post: {...emptyPost},\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n   }\n\n  handleError(error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n      this.setState({toMain: false, message: error.response.data});\n    } else if (error.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest\n      console.log(error.request);\n      this.setState({toMain: false, message: 'No response'});\n    } else {\n      // Something happened in setting up the request that\n      // triggered an Error\n      console.log('Error', error.message);\n      this.setState({toMain: false, message: error.message});          \n    }\n  }\n\n    createPost(data){\n      const endpoint = '/api/posts/' \n      let thisComp = this\n        let lookupOptions = {\n          method: \"POST\",\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(data)\n        }\n\n          fetch(endpoint, lookupOptions)\n          .then(function(response){\n              return response.json()\n          }).then(function(responseData){\n              console.log(responseData)\n              if (thisComp.props.newPostItemCreated){\n                  thisComp.props.newPostItemCreated(responseData)\n              }\n              thisComp.clearForm()\n          }).catch(function(error){\n              console.log(\"error\", error)\n              alert(\"An error occured, please try again later.\")\n          })\n      } \n      \n\n  componentDidMount() {\n    this.setState({post: {...emptyPost}});\n\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    const newPost = {...this.state.post};\n\n    newPost[name] = value;\n    this.setState({post: newPost});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    let data = this.state\n\n    const {post} = this.props\n    this.createPost(data)\n  }\n\n  render() {\n    if (this.state.toMain) {\n      const message = this.state.message;\n      return <Redirect\n               to={{\n                 pathname: \"/\",\n                 state: { message }\n               }}\n        />;\n    }\n    \n    const post = this.state.post;\n\n    return (\n      <div className=\"post\">\n        <Form onSubmit={this.handleSubmit}>\n          <FormGroup>\n            <Label for=\"location\">Location</Label>\n            <Input\n              type=\"text\"\n              name=\"location\"\n              value={post.location}\n              required=\"required\"\n              onChange={this.handleInputChange}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"description\">Description</Label>\n            <Input\n              type=\"text\"\n              name=\"description\"\n              value={post.description}\n              required=\"required\"\n              onChange={this.handleInputChange}           \n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"user\">User</Label>\n            <Input\n              type=\"text\"\n              name=\"user\"\n              value={post.user}\n              required=\"required\"\n              onChange={this.handleInputChange}           \n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"product\">Product</Label>\n            <Input\n              type=\"text\"\n              name=\"product\"\n              value={post.product}\n              required=\"required\"\n              onChange={this.handleInputChange}           \n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"expiration_date\">Expiration Date</Label>\n            <Input\n              type=\"Date\"\n              name=\"expiration_date\"\n              value={post.expiration_date}\n              required=\"required\"\n              onChange={this.handleInputChange}              \n            />\n          </FormGroup>\n          <Button color=\"primary\" type=\"submit\">Submit</Button>{' '}\n          <Link to='/'>\n            <Button color=\"secondary\">Back</Button>{' '}\n          </Link>\n        </Form>\n        {this.state.message && \n         <Alert\n           className=\"message\"\n           color=\"danger\">\n           Error<span> </span>\n           {this.state.message}\n         </Alert>\n        }\n      </div>\n    );\n  }\n}\n\nexport default NewPost;\n"]},"metadata":{},"sourceType":"module"}