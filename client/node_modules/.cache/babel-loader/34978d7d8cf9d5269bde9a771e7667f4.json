{"ast":null,"code":"import _objectSpread from \"/home/iason/foodshare-assignment/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/iason/foodshare-assignment/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/iason/foodshare-assignment/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/iason/foodshare-assignment/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/iason/foodshare-assignment/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/iason/foodshare-assignment/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/iason/foodshare-assignment/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/iason/foodshare-assignment/client/src/NewPost.js\";\nimport React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Alert } from 'reactstrap';\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport './App.css';\nvar emptyPost = {\n  user: '1',\n  product: '1',\n  location: '',\n  description: '',\n  expiration_date: '',\n  upload_date: '',\n  time: ''\n};\n\nvar NewPost =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewPost, _Component);\n\n  function NewPost(props) {\n    var _this;\n\n    _classCallCheck(this, NewPost);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewPost).call(this, props));\n    _this.state = {\n      toMain: false,\n      message: '',\n      post: _objectSpread({}, emptyPost)\n    };\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(NewPost, [{\n    key: \"handleError\",\n    value: function handleError(error) {\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n        this.setState({\n          toMain: false,\n          message: error.response.data\n        });\n      } else if (error.request) {\n        // The request was made but no response was received\n        // `error.request` is an instance of XMLHttpRequest\n        console.log(error.request);\n        this.setState({\n          toMain: false,\n          message: 'No response'\n        });\n      } else {\n        // Something happened in setting up the request that\n        // triggered an Error\n        console.log('Error', error.message);\n        this.setState({\n          toMain: false,\n          message: error.message\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (!this.props.match.params.id) {\n        this.setState({\n          post: _objectSpread({}, emptyPost)\n        });\n      } else {\n        axios.get('/api/' + this.props.match.url).then(function (response) {\n          return _this2.setState({\n            post: _objectSpread({}, response.data)\n          });\n        }).catch(function (error) {\n          return _this2.handleError(error);\n        });\n      }\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      var target = event.target;\n      var name = target.name;\n      var value = target.value;\n\n      var newPost = _objectSpread({}, this.state.post);\n\n      newPost[name] = value;\n      this.setState({\n        post: newPost\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this3 = this;\n\n      var id = this.state.post.id || '';\n      var product = this.state.product;\n      var location = this.state.location;\n      var description = this.state.description;\n      var expiration_date = this.state.expiration_date;\n      var upload_date = this.state.upload_date;\n      var time = this.state.time;\n      var method = this.state.book.id ? \"PUT\" : \"POST\";\n      axios(\"/api/posts/\".concat(id), {\n        method: method,\n        data: JSON.stringify(post),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (response) {\n        var message = '';\n\n        if (method === \"POST\") {\n          message = 'post uploaded';\n        }\n\n        _this3.setState({\n          toMain: true,\n          message: message\n        });\n      }).catch(function (error) {\n        return _this3.handleError(error);\n      });\n      event.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Location:\", React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.value,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return NewPost;\n}(Component);\n\nexport default NewPost;","map":{"version":3,"sources":["/home/iason/foodshare-assignment/client/src/NewPost.js"],"names":["React","Component","Button","Form","FormGroup","Label","Input","Alert","Redirect","Link","axios","emptyPost","user","product","location","description","expiration_date","upload_date","time","NewPost","props","state","toMain","message","post","handleInputChange","bind","handleSubmit","error","response","console","log","data","status","headers","setState","request","match","params","id","get","url","then","catch","handleError","event","target","name","value","newPost","method","book","JSON","stringify","preventDefault","handleChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Alert\n} from 'reactstrap';\n\nimport {\n  Redirect,\n  Link\n} from \"react-router-dom\";\n\nimport axios from 'axios';\n\nimport './App.css';\n\n\nconst emptyPost = {\n  user: '1',\n  product: '1',\n  location: '',\n  description: '',\n  expiration_date: '',\n  upload_date: '',\n  time: ''\n};\n\nclass NewPost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toMain: false,\n      message: '',\n      post: {...emptyPost},\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n   }\n\n  handleError(error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n      this.setState({toMain: false, message: error.response.data});\n    } else if (error.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest\n      console.log(error.request);\n      this.setState({toMain: false, message: 'No response'});\n    } else {\n      // Something happened in setting up the request that\n      // triggered an Error\n      console.log('Error', error.message);\n      this.setState({toMain: false, message: error.message});          \n    }\n  }\n\n  componentDidMount() {\n    if (!this.props.match.params.id) {\n      this.setState({post: {...emptyPost}});\n    } else {\n      axios.get('/api/' + this.props.match.url)\n        .then(response => this.setState({post: {...response.data}}))\n        .catch(error => this.handleError(error));\n    }\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n    const newPost = {...this.state.post};\n\n    newPost[name] = value;\n    this.setState({post: newPost});\n  }\n\n  handleSubmit(event) {\n    const id = this.state.post.id || '';\n    const product = this.state.product;\n    const location = this.state.location;\n    const description = this.state.description;\n    const expiration_date = this.state.expiration_date;\n    const upload_date = this.state.upload_date;\n    const time = this.state.time;\n    const method = this.state.book.id ? \"PUT\" : \"POST\";\n    axios(`/api/posts/${id}`, {\n      method: method,\n      data: JSON.stringify(post),\n      headers:{\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(response => {\n        let message = '';\n        if (method === \"POST\") {\n          message = 'post uploaded';\n        }\n        this.setState({toMain: true, message });\n      })\n      .catch(error => this.handleError(error));\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Location:\n          <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n\n}\n\nexport default NewPost;\n"]},"metadata":{},"sourceType":"module"}