{"ast":null,"code":"import _objectSpread from \"/home/iason/foodshare-assignment/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/iason/foodshare-assignment/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/iason/foodshare-assignment/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/iason/foodshare-assignment/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/iason/foodshare-assignment/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/iason/foodshare-assignment/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/iason/foodshare-assignment/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/iason/foodshare-assignment/client/src/NewPost.js\";\nimport React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Alert } from 'reactstrap';\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport './App.css';\nvar emptyPost = {\n  user: '',\n  product: '',\n  location: '',\n  description: '',\n  expiration_date: '',\n  upload_date: '',\n  time: ''\n};\n\nvar NewPost =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewPost, _Component);\n\n  function NewPost(props) {\n    var _this;\n\n    _classCallCheck(this, NewPost);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NewPost).call(this, props));\n    _this.state = {\n      toMain: false,\n      message: '',\n      post: _objectSpread({}, emptyPost)\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(NewPost, [{\n    key: \"handleError\",\n    value: function handleError(error) {\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n        this.setState({\n          toMain: false,\n          message: error.response.data\n        });\n      } else if (error.request) {\n        // The request was made but no response was received\n        // `error.request` is an instance of XMLHttpRequest\n        console.log(error.request);\n        this.setState({\n          toMain: false,\n          message: 'No response'\n        });\n      } else {\n        // Something happened in setting up the request that\n        // triggered an Error\n        console.log('Error', error.message);\n        this.setState({\n          toMain: false,\n          message: error.message\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        post: _objectSpread({}, emptyPost)\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this2 = this;\n\n      var id = this.state.post.id || '';\n      var product = this.state.product;\n      var location = this.state.location;\n      var description = this.state.description;\n      var expiration_date = this.state.expiration_date;\n      var upload_date = this.state.upload_date;\n      var time = this.state.time;\n      var method = this.state.book.id ? \"PUT\" : \"POST\";\n      axios(\"/api/posts/\".concat(id), {\n        method: method,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(function (response) {\n        var message = '';\n\n        if (method === \"POST\") {\n          message = 'post uploaded';\n        }\n\n        _this2.setState({\n          toMain: true,\n          message: message\n        });\n      }).catch(function (error) {\n        return _this2.handleError(error);\n      });\n      event.preventDefault();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.toMain) {\n        var message = this.state.message;\n        return React.createElement(Redirect, {\n          to: {\n            pathname: \"/\",\n            state: {\n              message: message\n            }\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        });\n      }\n\n      var post = this.state.post;\n      return React.createElement(\"div\", {\n        className: \"psot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"location\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Location\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"title\",\n        value: post.location,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Descrption\"), React.createElement(Input, {\n        type: \"test\",\n        name: \"description\",\n        value: post.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"expiration_date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Expiration Date\"), React.createElement(Input, {\n        type: \"Date\",\n        name: \"expiration_date\",\n        value: book.expiration_date,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })), React.createElement(Button, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Submit\"), ' ', React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Back\"), ' ')), this.state.message && React.createElement(Alert, {\n        className: \"message\",\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Error\", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \" \"), this.state.message));\n    }\n  }]);\n\n  return NewPost;\n}(Component);\n\nexport default NewPost;","map":{"version":3,"sources":["/home/iason/foodshare-assignment/client/src/NewPost.js"],"names":["React","Component","Button","Form","FormGroup","Label","Input","Alert","Redirect","Link","axios","emptyPost","user","product","location","description","expiration_date","upload_date","time","NewPost","props","state","toMain","message","post","handleSubmit","bind","error","response","console","log","data","status","headers","setState","request","event","id","method","book","then","catch","handleError","preventDefault","pathname"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Alert\n} from 'reactstrap';\n\nimport {\n  Redirect,\n  Link\n} from \"react-router-dom\";\n\nimport axios from 'axios';\n\nimport './App.css';\n\n\nconst emptyPost = {\n  user: '',\n  product: '',\n  location: '',\n  description: '',\n  expiration_date: '',\n  upload_date: '',\n  time: ''\n};\n\nclass NewPost extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      toMain: false,\n      message: '',\n      post: {...emptyPost},\n    };\n\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n   }\n\n  handleError(error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n      this.setState({toMain: false, message: error.response.data});\n    } else if (error.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest\n      console.log(error.request);\n      this.setState({toMain: false, message: 'No response'});\n    } else {\n      // Something happened in setting up the request that\n      // triggered an Error\n      console.log('Error', error.message);\n      this.setState({toMain: false, message: error.message});          \n    }\n  }\n\n  componentDidMount() {\n    this.setState({post: {...emptyPost}});\n\n  }\n\n\n\n  handleSubmit(event) {\n    const id = this.state.post.id || '';\n    const product = this.state.product;\n    const location = this.state.location;\n    const description = this.state.description;\n    const expiration_date = this.state.expiration_date;\n    const upload_date = this.state.upload_date;\n    const time = this.state.time;\n    const method = this.state.book.id ? \"PUT\" : \"POST\";\n    axios(`/api/posts/${id}`, {\n      method: method,\n      headers:{\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(response => {\n        let message = '';\n        if (method === \"POST\") {\n          message = 'post uploaded';\n        }\n        this.setState({toMain: true, message });\n      })\n      .catch(error => this.handleError(error));\n    event.preventDefault();\n  }\n\n  render() {\n    if (this.state.toMain) {\n      const message = this.state.message;\n      return <Redirect\n               to={{\n                 pathname: \"/\",\n                 state: { message }\n               }}\n        />;\n    }\n    \n    const post = this.state.post;\n\n    return (\n      <div className=\"psot\">\n        <Form onSubmit={this.handleSubmit}>\n          <FormGroup>\n            <Label for=\"location\">Location</Label>\n            <Input\n              type=\"text\"\n              name=\"title\"\n              value={post.location}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"description\">Descrption</Label>\n            <Input\n              type=\"test\"\n              name=\"description\"\n              value={post.description}             \n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"expiration_date\">Expiration Date</Label>\n            <Input\n              type=\"Date\"\n              name=\"expiration_date\"\n              value={book.expiration_date}              \n            />\n          </FormGroup>\n          <Button color=\"primary\">Submit</Button>{' '}\n          <Link to='/'>\n            <Button color=\"secondary\">Back</Button>{' '}\n          </Link>\n        </Form>\n        {this.state.message && \n         <Alert\n           className=\"message\"\n           color=\"danger\">\n           Error<span> </span>\n           {this.state.message}\n         </Alert>\n        }\n      </div>\n    );\n  }\n}\n\nexport default NewPost;\n"]},"metadata":{},"sourceType":"module"}